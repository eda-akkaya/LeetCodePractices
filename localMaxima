import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

// find the local maxima in a array and delete it, return new array
public class LocalMaximaRemove {

    public static void main(String[] args) {
        int[] array = new int[]{18, 1, 3, 6, 7, -5};

        System.out.println(Arrays.toString(removeLocalMaxima(array)));
    }

    public static int[] removeLocalMaxima(int[] array){
        List<Integer> deletingIndexes = new ArrayList<>();



        // find local maxima, add deleting indexes list
        for (int i = 0 ; i< array.length ;i++){

            if (i==0 && (array[i] > array[i+1])) { // check first element
                deletingIndexes.add(i);
            }
            else if (i==(array.length-1) && (array[i-1] < array[i])){  // check last element
                deletingIndexes.add(i);
            }
            else if (i > 0 && array[i-1]< array[i]  && array[i] > array[i+1]){
                deletingIndexes.add(i);
            }


            } // end of for

        List<Integer> listVersionOfArray = new ArrayList<>();
        for (int n : array) {
            listVersionOfArray.add(n);   // autoboxing  int -> Integer
        }

        // rewrite the array without local maximas
        for (int i = deletingIndexes.size() - 1; i >= 0; i--) {
            listVersionOfArray.remove((int) deletingIndexes.get(i));
        }

        int[] result ;
        // no maxima return array itself
        if (deletingIndexes.isEmpty()){
            result = Arrays.copyOf(array,array.length);
        }else {
            // arraylist  to array
            result = listVersionOfArray.stream().mapToInt(Integer::intValue).toArray();
        }


        return result;


    }
}
